<?php
namespace Nog\AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Nog\AppBundle\Entity\ProjectFile;
use Application\Sonata\UserBundle\Entity\User;
use Nog\AppBundle\Entity\ProjectRating;

/**
 * Project
 *
 * @ORM\Table("nog_projects")
 * @ORM\Entity(repositoryClass="Nog\AppBundle\Entity\ProjectRepository")
 */
class Project
{    
    
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="description", type="text")
     */
    private $description;

    /**
     * @var string
     *
     * @ORM\Column(name="folder", type="string", length=255)
     */    
    private $folder;

    
    /**
     * @var DateTime
     * @ORM\Column(name="dateCreated", type="datetime")
     */        
    private $dateCreated;
    
    /**
     * @var integer
     * @ORM\Column(name="status", type="integer")
     */
    private $status;

    /**
     * @ORM\OneToMany(targetEntity="\Nog\AppBundle\Entity\ProjectFile", mappedBy="project", cascade={"persist", "refresh", "remove"})
     */
    private $files;

    /**
     * @ORM\OneToMany(targetEntity="\Nog\AppBundle\Entity\ProjectRating", mappedBy="project", cascade={"persist", "refresh", "remove"})
     */
    private $ratings;
    
    
    /**
     * @ORM\ManyToOne(targetEntity="\Application\Sonata\UserBundle\Entity\User")
     * @ORM\JoinColumn(nullable=false)
     */    
    private $author;
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Project
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set description
     *
     * @param string $description
     * @return Project
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Get folder
     *
     * @return string 
     */
    public function getFolder()
    {
        return $this->folder;
    }    
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->files = new ArrayCollection();
        $this->folder = md5('uploadFolder'.rand().date('m-d-y').rand());
    }

    /**
     * Add files
     *
     * @param \Nog\AppBundle\Entity\ProjectFile $file
     * @return Project
     */
    public function addFile(ProjectFile $file)
    {
        $this->files[] = $file;
        $file->setProject($this);
        return $this;
    }

    /**
     * Remove files
     *
     * @param \Nog\AppBundle\Entity\ProjectFile $file
     */
    public function removeFile(ProjectFile $file)
    {
        $this->files->removeElement($file);
    }

    /**
     * Get files
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getFiles()
    {
        return $this->files;
    }

    /**
     * Set folder
     *
     * @param string $folder
     * @return Project
     */
    public function setFolder($folder)
    {
        $this->folder = $folder;

        return $this;
    }

    /**
     * Set author
     *
     * @param \Application\Sonata\UserBundle\Entity\User $author
     * @return Project
     */
    public function setAuthor(User $author)
    {
        $this->author = $author;

        return $this;
    }

    /**
     * Get author
     *
     * @return \Application\Sonata\UserBundle\Entity\User 
     */
    public function getAuthor()
    {
        return $this->author;
    }

    /**
     * Set dateCreated
     *
     * @param \DateTime $dateCreated
     * @return Project
     */
    public function setDateCreated($dateCreated)
    {
        $this->dateCreated = $dateCreated;

        return $this;
    }

    /**
     * Get dateCreated
     *
     * @return \DateTime 
     */
    public function getDateCreated()
    {
        return $this->dateCreated;
    }


    /**
     * Set status
     *
     * @param integer $status
     * @return Project
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Get status
     *
     * @return integer 
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Add ratings
     *
     * @param \Nog\AppBundle\Entity\ProjectRating $ratings
     * @return Project
     */
    public function addRating(ProjectRating $ratings)
    {
        $this->ratings[] = $ratings;

        return $this;
    }

    /**
     * Remove ratings
     *
     * @param \Nog\AppBundle\Entity\ProjectRating $ratings
     */
    public function removeRating(ProjectRating $ratings)
    {
        $this->ratings->removeElement($ratings);
    }

    /**
     * Get ratings
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getRatings()
    {
        return $this->ratings;
    }
}
